version: '3.8'

services:
  app:
    build:
      context: .
      platforms:
        - linux/arm64
        - linux/amd64
    container_name: spring-api
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    environment:
      SPRING_DATASOURCE_HOST: postgres
      SPRING_DATASOURCE_PORT: 5432
      SPRING_DATASOURCE_DB: testdb1
      SPRING_DATASOURCE_USERNAME: testuser
      SPRING_DATASOURCE_PASSWORD: testpass
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          memory: 256M

  postgres:
    image: postgres:15-alpine
    platform: ${POSTGRES_PLATFORM:-linux/arm64}
    container_name: postgres-test
    security_opt:
      - no-new-privileges:true
    environment:
      POSTGRES_DB: testdb1
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d testdb1"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge